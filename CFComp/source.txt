.ORG 48

: SP        8 ;
: RSP      12 ;
: (HERE)   16 ;
: (LAST)   20 ;
: STATE    24 ;
: BASE     28 ;
: (STACK)  32 ;
: (RSTACK) 36 ;
: STDIN    40 ;
: INPUT-FP 44 ;

: HERE (HERE) @ ;
: LAST (LAST) @ ;

: , HERE ! HERE 4 + (HERE) ! ;
: C, HERE C! HERE 1 + (HERE) ! ;

: HEX 16 BASE ! ;
: DECIMAL 10 BASE ! ;

: ?COMPILING STATE @ ;
: [ 0 STATE ! ;
: ] 1 STATE ! ;

:! !  ?COMPILING IF <asm> CPUSH STORE  </asm> C, <asm> RET </asm> THEN ! ;
:! C! ?COMPILING IF <asm> CPUSH CSTORE </asm> C, <asm> RET </asm> THEN C! ;

:! @  ?COMPILING IF <asm> CPUSH FETCH  </asm> C, <asm> RET </asm> THEN @ ;
:! C@ ?COMPILING IF <asm> CPUSH CFETCH </asm> C, <asm> RET </asm> THEN C@ ;

:! + ?COMPILING IF <asm> CPUSH ADD </asm> C, <asm> RET </asm> THEN + ;
:! - ?COMPILING IF <asm> CPUSH SUB </asm> C, <asm> RET </asm> THEN - ;
:! * ?COMPILING IF <asm> CPUSH MUL </asm> C, <asm> RET </asm> THEN * ;
:! / ?COMPILING IF <asm> CPUSH DIV </asm> C, <asm> RET </asm> THEN / ;

:! < ?COMPILING IF <asm> CPUSH LT </asm> C, <asm> RET </asm> THEN < ;
:! = ?COMPILING IF <asm> CPUSH EQ </asm> C, <asm> RET </asm> THEN = ;
:! > ?COMPILING IF <asm> CPUSH GT </asm> C, <asm> RET </asm> THEN > ;

:! DUP  ?COMPILING IF <asm> CPUSH DUP  </asm> C, <asm> RET </asm> THEN DUP ;
:! SWAP ?COMPILING IF <asm> CPUSH SWAP </asm> C, <asm> RET </asm> THEN SWAP ;
:! DROP ?COMPILING IF <asm> CPUSH DROP </asm> C, <asm> RET </asm> THEN DROP ;
:! ROT  ?COMPILING IF <asm> CPUSH ROT  </asm> C, <asm> RET </asm> THEN ROT ;
:! OVER ?COMPILING IF <asm> CPUSH OVER </asm> C, <asm> RET </asm> THEN OVER ;
:! TUCK ?COMPILING IF <asm> CPUSH TUCK </asm> C, <asm> RET </asm> THEN TUCK ;

:! RESET ?COMPILING IF <asm> CPUSH RESET </asm> C, <asm> RET </asm> THEN RESET ;
:! BYE   ?COMPILING IF <asm> CPUSH BYE   </asm> C, <asm> RET </asm> THEN BYE ;

:! EMIT ?COMPILING IF <asm> CPUSH EMIT </asm> C, <asm> EMIT </asm> THEN SWAP ;

: 1+ 1 + ;
: 0= 0 = ; : <> = 0= ; : <= > 0= ; : >= < 0= ;
: CRLF 13 EMIT 10 EMIT ;
: BL 32 EMIT ;
: ZTYPE BEGIN DUP C@ DUP IF EMIT 1+ ELSE DROP DROP LEAVE THEN AGAIN ;

: OK BL 79 EMIT 75 EMIT CRLF ;
: HELLO 72 EMIT 73 EMIT ;

: 0SP (STACK) @ SP ! ; 
: getInput HERE 100 + GETLINE ;

: executeInput 1+ ZTYPE ;
: doWork getInput executeInput ;

: initSys ;
: resetState 0 STATE ! 10 BASE ! 0SP ;

: mainLoop resetState BEGIN OK doWork AGAIN ;

: main HELLO initSys mainLoop ;
