00000000 08 04 07 00 00 ; JMP 00000704
00000005 00             ; RESET
00000006 00             ; RESET
00000007 00             ; RESET
00000008 00             ; RESET
00000009 18 00 00 00 1c ; DICTP 1c000000 - ??
0000000e 00             ; RESET
0000000f 00             ; RESET
00000010 19             ; EMIT
00000011 07             ; ROT
00000012 00             ; RESET
00000013 00             ; RESET
00000014 89             ; (data)
00000015 13             ; MUL
00000016 00             ; RESET
00000017 00             ; RESET
00000018 00             ; RESET
00000019 00             ; RESET
0000001a 00             ; RESET
0000001b 00             ; RESET
0000001c 0a 00 00 00 00 ; JMPNZ 00000000
00000021 00             ; RESET
00000022 00             ; RESET
00000023 00             ; RESET
00000024 00             ; RESET
00000025 00             ; RESET
00000026 00             ; RESET
00000027 00             ; RESET
00000028 00             ; RESET
00000029 00             ; RESET
0000002a 00             ; RESET
0000002b 00             ; RESET
0000002c 00             ; RESET
0000002d 00             ; RESET
0000002e 00             ; RESET
0000002f 00             ; RESET
00000030 00             ; RESET
00000031 00             ; RESET
00000032 00             ; RESET
00000033 00             ; RESET
00000034 00             ; RESET
00000035 00             ; RESET
00000036 00             ; RESET
00000037 00             ; RESET
00000038 00             ; RESET
00000039 00             ; RESET
0000003a 00             ; RESET
0000003b 00             ; RESET
0000003c 00             ; RESET
0000003d 00             ; RESET
0000003e 00             ; RESET
0000003f 00             ; RESET
00000040 18 ef 17 00 00 ; DICTP 000017ef - SP
00000045 0e 08          ; CPUSH 08
00000047 0c             ; RET
00000048 18 e1 17 00 00 ; DICTP 000017e1 - RSP
0000004d 0e 0c          ; CPUSH 0c
0000004f 0c             ; RET
00000050 18 d0 17 00 00 ; DICTP 000017d0 - (HERE)
00000055 0e 10          ; CPUSH 10
00000057 0c             ; RET
00000058 18 bf 17 00 00 ; DICTP 000017bf - (LAST)
0000005d 0e 14          ; CPUSH 14
0000005f 0c             ; RET
00000060 18 af 17 00 00 ; DICTP 000017af - STATE
00000065 0e 18          ; CPUSH 18
00000067 0c             ; RET
00000068 18 a0 17 00 00 ; DICTP 000017a0 - BASE
0000006d 0e 1c          ; CPUSH 1c
0000006f 0c             ; RET
00000070 18 8e 17 00 00 ; DICTP 0000178e - (STACK)
00000075 0e 20          ; CPUSH 20
00000077 0c             ; RET
00000078 18 7b 17 00 00 ; DICTP 0000177b - (RSTACK)
0000007d 0e 24          ; CPUSH 24
0000007f 0c             ; RET
00000080 18 6b 17 00 00 ; DICTP 0000176b - STDIN
00000085 0e 28          ; CPUSH 28
00000087 0c             ; RET
00000088 18 58 17 00 00 ; DICTP 00001758 - INPUT-FP
0000008d 0e 2c          ; CPUSH 2c
0000008f 0c             ; RET
00000090 18 4a 17 00 00 ; DICTP 0000174a - >IN
00000095 0e 30          ; CPUSH 30
00000097 0c             ; RET
00000098 18 3a 17 00 00 ; DICTP 0000173a - isNeg
0000009d 0e 34          ; CPUSH 34
0000009f 0c             ; RET
000000a0 18 2b 17 00 00 ; DICTP 0000172b - HERE
000000a5 0b 50 00 00 00 ; CALL 00000050 - (HERE)
000000aa 02             ; FETCH
000000ab 0c             ; RET
000000ac 18 1c 17 00 00 ; DICTP 0000171c - LAST
000000b1 0b 58 00 00 00 ; CALL 00000058 - (LAST)
000000b6 02             ; FETCH
000000b7 0c             ; RET
000000b8 18 07 17 00 00 ; DICTP 00001707 - ?COMPILING
000000bd 0b 60 00 00 00 ; CALL 00000060 - STATE
000000c2 02             ; FETCH
000000c3 0c             ; RET
000000c4 18 fb 16 00 00 ; DICTP 000016fb - [
000000c9 0e 00          ; CPUSH 00
000000cb 0b 60 00 00 00 ; CALL 00000060 - STATE
000000d0 03             ; STORE
000000d1 0c             ; RET
000000d2 18 ef 16 00 00 ; DICTP 000016ef - ]
000000d7 0e 01          ; CPUSH 01
000000d9 0b 60 00 00 00 ; CALL 00000060 - STATE
000000de 03             ; STORE
000000df 0c             ; RET
000000e0 18 e3 16 00 00 ; DICTP 000016e3 - ,
000000e5 0b a0 00 00 00 ; CALL 000000a0 - HERE
000000ea 1b             ; TUCK
000000eb 03             ; STORE
000000ec 0e 04          ; CPUSH 04
000000ee 11             ; ADD
000000ef 0b 50 00 00 00 ; CALL 00000050 - (HERE)
000000f4 03             ; STORE
000000f5 0c             ; RET
000000f6 18 d6 16 00 00 ; DICTP 000016d6 - C,
000000fb 0b a0 00 00 00 ; CALL 000000a0 - HERE
00000100 1b             ; TUCK
00000101 10             ; CSTORE
00000102 24             ; ONEPLUS
00000103 0b 50 00 00 00 ; CALL 00000050 - (HERE)
00000108 03             ; STORE
00000109 0c             ; RET
0000010a 18 ca 16 00 00 ; DICTP 000016ca - !
0000010f 0b b8 00 00 00 ; CALL 000000b8 - ?COMPILING
00000114 09 21 01 00 00 ; JMPZ 00000121
00000119 0e 03          ; CPUSH 03
0000011b 0b f6 00 00 00 ; CALL 000000f6 - C,
00000120 0c             ; RET
00000121 03             ; STORE
00000122 0c             ; RET
00000123 18 bd 16 00 00 ; DICTP 000016bd - C!
00000128 0b b8 00 00 00 ; CALL 000000b8 - ?COMPILING
0000012d 09 3a 01 00 00 ; JMPZ 0000013a
00000132 0e 10          ; CPUSH 10
00000134 0b f6 00 00 00 ; CALL 000000f6 - C,
00000139 0c             ; RET
0000013a 10             ; CSTORE
0000013b 0c             ; RET
0000013c 18 b1 16 00 00 ; DICTP 000016b1 - @
00000141 0b b8 00 00 00 ; CALL 000000b8 - ?COMPILING
00000146 09 53 01 00 00 ; JMPZ 00000153
0000014b 0e 02          ; CPUSH 02
0000014d 0b f6 00 00 00 ; CALL 000000f6 - C,
00000152 0c             ; RET
00000153 02             ; FETCH
00000154 0c             ; RET
00000155 18 a4 16 00 00 ; DICTP 000016a4 - C@
0000015a 0b b8 00 00 00 ; CALL 000000b8 - ?COMPILING
0000015f 09 6c 01 00 00 ; JMPZ 0000016c
00000164 0e 0f          ; CPUSH 0f
00000166 0b f6 00 00 00 ; CALL 000000f6 - C,
0000016b 0c             ; RET
0000016c 0f             ; CFETCH
0000016d 0c             ; RET
0000016e 18 98 16 00 00 ; DICTP 00001698 - +
00000173 0b b8 00 00 00 ; CALL 000000b8 - ?COMPILING
00000178 09 85 01 00 00 ; JMPZ 00000185
0000017d 0e 11          ; CPUSH 11
0000017f 0b f6 00 00 00 ; CALL 000000f6 - C,
00000184 0c             ; RET
00000185 11             ; ADD
00000186 0c             ; RET
00000187 18 8c 16 00 00 ; DICTP 0000168c - -
0000018c 0b b8 00 00 00 ; CALL 000000b8 - ?COMPILING
00000191 09 9e 01 00 00 ; JMPZ 0000019e
00000196 0e 12          ; CPUSH 12
00000198 0b f6 00 00 00 ; CALL 000000f6 - C,
0000019d 0c             ; RET
0000019e 12             ; SUB
0000019f 0c             ; RET
000001a0 18 80 16 00 00 ; DICTP 00001680 - *
000001a5 0b b8 00 00 00 ; CALL 000000b8 - ?COMPILING
000001aa 09 b7 01 00 00 ; JMPZ 000001b7
000001af 0e 13          ; CPUSH 13
000001b1 0b f6 00 00 00 ; CALL 000000f6 - C,
000001b6 0c             ; RET
000001b7 13             ; MUL
000001b8 0c             ; RET
000001b9 18 74 16 00 00 ; DICTP 00001674 - /
000001be 0b b8 00 00 00 ; CALL 000000b8 - ?COMPILING
000001c3 09 d0 01 00 00 ; JMPZ 000001d0
000001c8 0e 14          ; CPUSH 14
000001ca 0b f6 00 00 00 ; CALL 000000f6 - C,
000001cf 0c             ; RET
000001d0 14             ; DIV
000001d1 0c             ; RET
000001d2 18 68 16 00 00 ; DICTP 00001668 - <
000001d7 0b b8 00 00 00 ; CALL 000000b8 - ?COMPILING
000001dc 09 e9 01 00 00 ; JMPZ 000001e9
000001e1 0e 15          ; CPUSH 15
000001e3 0b f6 00 00 00 ; CALL 000000f6 - C,
000001e8 0c             ; RET
000001e9 15             ; LT
000001ea 0c             ; RET
000001eb 18 5c 16 00 00 ; DICTP 0000165c - =
000001f0 0b b8 00 00 00 ; CALL 000000b8 - ?COMPILING
000001f5 09 02 02 00 00 ; JMPZ 00000202
000001fa 0e 16          ; CPUSH 16
000001fc 0b f6 00 00 00 ; CALL 000000f6 - C,
00000201 0c             ; RET
00000202 16             ; EQ
00000203 0c             ; RET
00000204 18 50 16 00 00 ; DICTP 00001650 - >
00000209 0b b8 00 00 00 ; CALL 000000b8 - ?COMPILING
0000020e 09 1b 02 00 00 ; JMPZ 0000021b
00000213 0e 17          ; CPUSH 17
00000215 0b f6 00 00 00 ; CALL 000000f6 - C,
0000021a 0c             ; RET
0000021b 17             ; GT
0000021c 0c             ; RET
0000021d 18 42 16 00 00 ; DICTP 00001642 - DUP
00000222 0b b8 00 00 00 ; CALL 000000b8 - ?COMPILING
00000227 09 34 02 00 00 ; JMPZ 00000234
0000022c 0e 06          ; CPUSH 06
0000022e 0b f6 00 00 00 ; CALL 000000f6 - C,
00000233 0c             ; RET
00000234 06             ; DUP
00000235 0c             ; RET
00000236 18 33 16 00 00 ; DICTP 00001633 - SWAP
0000023b 0b b8 00 00 00 ; CALL 000000b8 - ?COMPILING
00000240 09 4d 02 00 00 ; JMPZ 0000024d
00000245 0e 04          ; CPUSH 04
00000247 0b f6 00 00 00 ; CALL 000000f6 - C,
0000024c 0c             ; RET
0000024d 04             ; SWAP
0000024e 0c             ; RET
0000024f 18 24 16 00 00 ; DICTP 00001624 - DROP
00000254 0b b8 00 00 00 ; CALL 000000b8 - ?COMPILING
00000259 09 66 02 00 00 ; JMPZ 00000266
0000025e 0e 05          ; CPUSH 05
00000260 0b f6 00 00 00 ; CALL 000000f6 - C,
00000265 0c             ; RET
00000266 05             ; DROP
00000267 0c             ; RET
00000268 18 16 16 00 00 ; DICTP 00001616 - ROT
0000026d 0b b8 00 00 00 ; CALL 000000b8 - ?COMPILING
00000272 09 7f 02 00 00 ; JMPZ 0000027f
00000277 0e 07          ; CPUSH 07
00000279 0b f6 00 00 00 ; CALL 000000f6 - C,
0000027e 0c             ; RET
0000027f 07             ; ROT
00000280 0c             ; RET
00000281 18 07 16 00 00 ; DICTP 00001607 - OVER
00000286 0b b8 00 00 00 ; CALL 000000b8 - ?COMPILING
0000028b 09 98 02 00 00 ; JMPZ 00000298
00000290 0e 1a          ; CPUSH 1a
00000292 0b f6 00 00 00 ; CALL 000000f6 - C,
00000297 0c             ; RET
00000298 1a             ; OVER
00000299 0c             ; RET
0000029a 18 f8 15 00 00 ; DICTP 000015f8 - TUCK
0000029f 0b b8 00 00 00 ; CALL 000000b8 - ?COMPILING
000002a4 09 b1 02 00 00 ; JMPZ 000002b1
000002a9 0e 1b          ; CPUSH 1b
000002ab 0b f6 00 00 00 ; CALL 000000f6 - C,
000002b0 0c             ; RET
000002b1 1b             ; TUCK
000002b2 0c             ; RET
000002b3 18 e8 15 00 00 ; DICTP 000015e8 - RESET
000002b8 0b b8 00 00 00 ; CALL 000000b8 - ?COMPILING
000002bd 09 ca 02 00 00 ; JMPZ 000002ca
000002c2 0e 00          ; CPUSH 00
000002c4 0b f6 00 00 00 ; CALL 000000f6 - C,
000002c9 0c             ; RET
000002ca 00             ; RESET
000002cb 0c             ; RET
000002cc 18 da 15 00 00 ; DICTP 000015da - BYE
000002d1 0b b8 00 00 00 ; CALL 000000b8 - ?COMPILING
000002d6 09 e3 02 00 00 ; JMPZ 000002e3
000002db 0e ff          ; CPUSH ff
000002dd 0b f6 00 00 00 ; CALL 000000f6 - C,
000002e2 0c             ; RET
000002e3 ff             ; BYE
000002e4 0c             ; RET
000002e5 18 cb 15 00 00 ; DICTP 000015cb - EMIT
000002ea 0b b8 00 00 00 ; CALL 000000b8 - ?COMPILING
000002ef 09 fc 02 00 00 ; JMPZ 000002fc
000002f4 0e 19          ; CPUSH 19
000002f6 0b f6 00 00 00 ; CALL 000000f6 - C,
000002fb 0c             ; RET
000002fc 19             ; EMIT
000002fd 0c             ; RET
000002fe 18 bb 15 00 00 ; DICTP 000015bb - FOPEN
00000303 0b b8 00 00 00 ; CALL 000000b8 - ?COMPILING
00000308 09 15 03 00 00 ; JMPZ 00000315
0000030d 0e 1c          ; CPUSH 1c
0000030f 0b f6 00 00 00 ; CALL 000000f6 - C,
00000314 0c             ; RET
00000315 1c             ; FOPEN
00000316 0c             ; RET
00000317 18 ab 15 00 00 ; DICTP 000015ab - FREAD
0000031c 0b b8 00 00 00 ; CALL 000000b8 - ?COMPILING
00000321 09 2e 03 00 00 ; JMPZ 0000032e
00000326 0e 1d          ; CPUSH 1d
00000328 0b f6 00 00 00 ; CALL 000000f6 - C,
0000032d 0c             ; RET
0000032e 1d             ; FREAD
0000032f 0c             ; RET
00000330 18 97 15 00 00 ; DICTP 00001597 - FREADLINE
00000335 0b b8 00 00 00 ; CALL 000000b8 - ?COMPILING
0000033a 09 47 03 00 00 ; JMPZ 00000347
0000033f 0e 1e          ; CPUSH 1e
00000341 0b f6 00 00 00 ; CALL 000000f6 - C,
00000346 0c             ; RET
00000347 1e             ; FREADLINE
00000348 0c             ; RET
00000349 18 86 15 00 00 ; DICTP 00001586 - FRWITE
0000034e 0b b8 00 00 00 ; CALL 000000b8 - ?COMPILING
00000353 09 64 03 00 00 ; JMPZ 00000364
00000358 0e 0b          ; CPUSH 0b
0000035a 49             ; (data)
0000035b 03             ; STORE
0000035c 00             ; RESET
0000035d 00             ; RESET
0000035e 0b f6 00 00 00 ; CALL 000000f6 - C,
00000363 0c             ; RET
00000364 0b 49 03 00 00 ; CALL 00000349 - FRWITE
00000369 0c             ; RET
0000036a 18 75 15 00 00 ; DICTP 00001575 - FCLOSE
0000036f 0b b8 00 00 00 ; CALL 000000b8 - ?COMPILING
00000374 09 81 03 00 00 ; JMPZ 00000381
00000379 0e 20          ; CPUSH 20
0000037b 0b f6 00 00 00 ; CALL 000000f6 - C,
00000380 0c             ; RET
00000381 20             ; FCLOSE
00000382 0c             ; RET
00000383 18 68 15 00 00 ; DICTP 00001568 - 1+
00000388 0b b8 00 00 00 ; CALL 000000b8 - ?COMPILING
0000038d 09 9a 03 00 00 ; JMPZ 0000039a
00000392 0e 24          ; CPUSH 24
00000394 0b f6 00 00 00 ; CALL 000000f6 - C,
00000399 0c             ; RET
0000039a 24             ; ONEPLUS
0000039b 0c             ; RET
0000039c 18 5b 15 00 00 ; DICTP 0000155b - 0=
000003a1 0e 00          ; CPUSH 00
000003a3 16             ; EQ
000003a4 0c             ; RET
000003a5 18 4e 15 00 00 ; DICTP 0000154e - <>
000003aa 16             ; EQ
000003ab 0b 9c 03 00 00 ; CALL 0000039c - 0=
000003b0 0c             ; RET
000003b1 18 41 15 00 00 ; DICTP 00001541 - <=
000003b6 17             ; GT
000003b7 0b 9c 03 00 00 ; CALL 0000039c - 0=
000003bc 0c             ; RET
000003bd 18 34 15 00 00 ; DICTP 00001534 - >=
000003c2 15             ; LT
000003c3 0b 9c 03 00 00 ; CALL 0000039c - 0=
000003c8 0c             ; RET
000003c9 18 25 15 00 00 ; DICTP 00001525 - CRLF
000003ce 0e 0d          ; CPUSH 0d
000003d0 19             ; EMIT
000003d1 0e 0a          ; CPUSH 0a
000003d3 19             ; EMIT
000003d4 0c             ; RET
000003d5 18 18 15 00 00 ; DICTP 00001518 - BL
000003da 0e 20          ; CPUSH 20
000003dc 19             ; EMIT
000003dd 0c             ; RET
000003de 18 08 15 00 00 ; DICTP 00001508 - ZTYPE
000003e3 06             ; DUP
000003e4 0f             ; CFETCH
000003e5 06             ; DUP
000003e6 09 f2 03 00 00 ; JMPZ 000003f2
000003eb 19             ; EMIT
000003ec 24             ; ONEPLUS
000003ed 08 f5 03 00 00 ; JMP 000003f5
000003f2 05             ; DROP
000003f3 05             ; DROP
000003f4 0c             ; RET
000003f5 08 e3 03 00 00 ; JMP 000003e3
000003fa 0c             ; RET
000003fb 18 fb 14 00 00 ; DICTP 000014fb - OK
00000400 0b d5 03 00 00 ; CALL 000003d5 - BL
00000405 0e 4f          ; CPUSH 4f
00000407 19             ; EMIT
00000408 0e 4b          ; CPUSH 4b
0000040a 19             ; EMIT
0000040b 0b c9 03 00 00 ; CALL 000003c9 - CRLF
00000410 0c             ; RET
00000411 18 eb 14 00 00 ; DICTP 000014eb - HELLO
00000416 0b 90 00 00 00 ; CALL 00000090 - >IN
0000041b 02             ; FETCH
0000041c 0b 9c 03 00 00 ; CALL 0000039c - 0=
00000421 09 2c 04 00 00 ; JMPZ 0000042c
00000426 0e 48          ; CPUSH 48
00000428 19             ; EMIT
00000429 0e 49          ; CPUSH 49
0000042b 19             ; EMIT
0000042c 0c             ; RET
0000042d 18 dd 14 00 00 ; DICTP 000014dd - PAD
00000432 0b ac 00 00 00 ; CALL 000000ac - LAST
00000437 0e c8          ; CPUSH c8
00000439 12             ; SUB
0000043a 0c             ; RET
0000043b 18 ca 14 00 00 ; DICTP 000014ca - getInput
00000440 0b 2d 04 00 00 ; CALL 0000042d - PAD
00000445 0e 80          ; CPUSH 80
00000447 0e 00          ; CPUSH 00
00000449 1e             ; FREADLINE
0000044a 05             ; DROP
0000044b 0b 2d 04 00 00 ; CALL 0000042d - PAD
00000450 0c             ; RET
00000451 18 bc 14 00 00 ; DICTP 000014bc - bye
00000456 0e 42          ; CPUSH 42
00000458 19             ; EMIT
00000459 0e 59          ; CPUSH 59
0000045b 19             ; EMIT
0000045c 0e 45          ; CPUSH 45
0000045e 19             ; EMIT
0000045f ff             ; BYE
00000460 0c             ; RET
00000461 18 ad 14 00 00 ; DICTP 000014ad - ?DUP
00000466 06             ; DUP
00000467 09 6d 04 00 00 ; JMPZ 0000046d
0000046c 06             ; DUP
0000046d 0c             ; RET
0000046e 18 9f 14 00 00 ; DICTP 0000149f - HEX
00000473 0e 10          ; CPUSH 10
00000475 0b 68 00 00 00 ; CALL 00000068 - BASE
0000047a 03             ; STORE
0000047b 0c             ; RET
0000047c 18 8d 14 00 00 ; DICTP 0000148d - DECIMAL
00000481 0e 0a          ; CPUSH 0a
00000483 0b 68 00 00 00 ; CALL 00000068 - BASE
00000488 03             ; STORE
00000489 0c             ; RET
0000048a 18 7c 14 00 00 ; DICTP 0000147c - skipWS
0000048f 06             ; DUP
00000490 0f             ; CFETCH
00000491 06             ; DUP
00000492 09 ab 04 00 00 ; JMPZ 000004ab
00000497 0e 20          ; CPUSH 20
00000499 17             ; GT
0000049a 09 a5 04 00 00 ; JMPZ 000004a5
0000049f 0c             ; RET
000004a0 08 a6 04 00 00 ; JMP 000004a6
000004a5 24             ; ONEPLUS
000004a6 08 ad 04 00 00 ; JMP 000004ad
000004ab 05             ; DROP
000004ac 0c             ; RET
000004ad 08 8f 04 00 00 ; JMP 0000048f
000004b2 0c             ; RET
000004b3 18 67 14 00 00 ; DICTP 00001467 - getOneWord
000004b8 06             ; DUP
000004b9 21             ; DTOR
000004ba 21             ; DTOR
000004bb 22             ; RFETCH
000004bc 0f             ; CFETCH
000004bd 0e 20          ; CPUSH 20
000004bf 17             ; GT
000004c0 09 cd 04 00 00 ; JMPZ 000004cd
000004c5 23             ; RTOD
000004c6 24             ; ONEPLUS
000004c7 21             ; DTOR
000004c8 08 df 04 00 00 ; JMP 000004df
000004cd 22             ; RFETCH
000004ce 0f             ; CFETCH
000004cf 09 db 04 00 00 ; JMPZ 000004db
000004d4 0e 00          ; CPUSH 00
000004d6 22             ; RFETCH
000004d7 10             ; CSTORE
000004d8 23             ; RTOD
000004d9 24             ; ONEPLUS
000004da 21             ; DTOR
000004db 23             ; RTOD
000004dc 23             ; RTOD
000004dd 04             ; SWAP
000004de 0c             ; RET
000004df 08 bb 04 00 00 ; JMP 000004bb
000004e4 0c             ; RET
000004e5 18 52 14 00 00 ; DICTP 00001452 - findInDict
000004ea 0e 00          ; CPUSH 00
000004ec 0e 00          ; CPUSH 00
000004ee 0e 00          ; CPUSH 00
000004f0 0c             ; RET
000004f1 18 3c 14 00 00 ; DICTP 0000143c - isHexDigit?
000004f6 0b 68 00 00 00 ; CALL 00000068 - BASE
000004fb 02             ; FETCH
000004fc 0e 10          ; CPUSH 10
000004fe 16             ; EQ
000004ff 09 26 05 00 00 ; JMPZ 00000526
00000504 06             ; DUP
00000505 0e 41          ; CPUSH 41
00000507 15             ; LT
00000508 09 11 05 00 00 ; JMPZ 00000511
0000050d 05             ; DROP
0000050e 0e 00          ; CPUSH 00
00000510 0c             ; RET
00000511 06             ; DUP
00000512 0e 46          ; CPUSH 46
00000514 17             ; GT
00000515 09 1e 05 00 00 ; JMPZ 0000051e
0000051a 05             ; DROP
0000051b 0e 00          ; CPUSH 00
0000051d 0c             ; RET
0000051e 05             ; DROP
0000051f 0e 01          ; CPUSH 01
00000521 08 29 05 00 00 ; JMP 00000529
00000526 05             ; DROP
00000527 0e 00          ; CPUSH 00
00000529 0c             ; RET
0000052a 18 27 14 00 00 ; DICTP 00001427 - isNumChar?
0000052f 06             ; DUP
00000530 0e 30          ; CPUSH 30
00000532 15             ; LT
00000533 09 3b 05 00 00 ; JMPZ 0000053b
00000538 0e 00          ; CPUSH 00
0000053a 0c             ; RET
0000053b 06             ; DUP
0000053c 0e 39          ; CPUSH 39
0000053e 17             ; GT
0000053f 09 5f 05 00 00 ; JMPZ 0000055f
00000544 06             ; DUP
00000545 0b f1 04 00 00 ; CALL 000004f1 - isHexDigit?
0000054a 09 56 05 00 00 ; JMPZ 00000556
0000054f 0e 37          ; CPUSH 37
00000551 08 5a 05 00 00 ; JMP 0000055a
00000556 05             ; DROP
00000557 0e 00          ; CPUSH 00
00000559 0c             ; RET
0000055a 08 61 05 00 00 ; JMP 00000561
0000055f 0e 30          ; CPUSH 30
00000561 12             ; SUB
00000562 0e 01          ; CPUSH 01
00000564 0c             ; RET
00000565 18 13 14 00 00 ; DICTP 00001413 - isNumber?
0000056a 06             ; DUP
0000056b 0f             ; CFETCH
0000056c 0e 2d          ; CPUSH 2d
0000056e 16             ; EQ
0000056f 06             ; DUP
00000570 0b 98 00 00 00 ; CALL 00000098 - isNeg
00000575 03             ; STORE
00000576 09 7c 05 00 00 ; JMPZ 0000057c
0000057b 24             ; ONEPLUS
0000057c 0e 00          ; CPUSH 00
0000057e 21             ; DTOR
0000057f 06             ; DUP
00000580 0f             ; CFETCH
00000581 06             ; DUP
00000582 0b 9c 03 00 00 ; CALL 0000039c - 0=
00000587 09 a0 05 00 00 ; JMPZ 000005a0
0000058c 05             ; DROP
0000058d 23             ; RTOD
0000058e 0b 98 00 00 00 ; CALL 00000098 - isNeg
00000593 02             ; FETCH
00000594 09 9d 05 00 00 ; JMPZ 0000059d
00000599 0e 00          ; CPUSH 00
0000059b 04             ; SWAP
0000059c 12             ; SUB
0000059d 0e 01          ; CPUSH 01
0000059f 0c             ; RET
000005a0 0b 2a 05 00 00 ; CALL 0000052a - isNumChar?
000005a5 09 ba 05 00 00 ; JMPZ 000005ba
000005aa 23             ; RTOD
000005ab 0b 68 00 00 00 ; CALL 00000068 - BASE
000005b0 02             ; FETCH
000005b1 13             ; MUL
000005b2 11             ; ADD
000005b3 21             ; DTOR
000005b4 24             ; ONEPLUS
000005b5 08 c0 05 00 00 ; JMP 000005c0
000005ba 05             ; DROP
000005bb 05             ; DROP
000005bc 23             ; RTOD
000005bd 0e 00          ; CPUSH 00
000005bf 0c             ; RET
000005c0 08 7f 05 00 00 ; JMP 0000057f
000005c5 0c             ; RET
000005c6 18 fd 13 00 00 ; DICTP 000013fd - executeWord
000005cb 0e 5b          ; CPUSH 5b
000005cd 19             ; EMIT
000005ce 06             ; DUP
000005cf 0b de 03 00 00 ; CALL 000003de - ZTYPE
000005d4 0e 5d          ; CPUSH 5d
000005d6 19             ; EMIT
000005d7 06             ; DUP
000005d8 0f             ; CFETCH
000005d9 0e 7e          ; CPUSH 7e
000005db 16             ; EQ
000005dc 09 e7 05 00 00 ; JMPZ 000005e7
000005e1 05             ; DROP
000005e2 0b 51 04 00 00 ; CALL 00000451 - bye
000005e7 21             ; DTOR
000005e8 22             ; RFETCH
000005e9 0b e5 04 00 00 ; CALL 000004e5 - findInDict
000005ee 09 20 06 00 00 ; JMPZ 00000620
000005f3 23             ; RTOD
000005f4 05             ; DROP
000005f5 0b b8 00 00 00 ; CALL 000000b8 - ?COMPILING
000005fa 09 1a 06 00 00 ; JMPZ 0000061a
000005ff 09 09 06 00 00 ; JMPZ 00000609
00000604 08 15 06 00 00 ; JMP 00000615
00000609 01 0b 0b f6 00 ; PUSH 00f60b0b
0000060e 00             ; RESET
0000060f 00             ; RESET
00000610 0b e0 00 00 00 ; CALL 000000e0 - ,
00000615 08 1b 06 00 00 ; JMP 0000061b
0000061a 05             ; DROP
0000061b 08 74 06 00 00 ; JMP 00000674
00000620 05             ; DROP
00000621 05             ; DROP
00000622 22             ; RFETCH
00000623 0b 65 05 00 00 ; CALL 00000565 - isNumber?
00000628 09 62 06 00 00 ; JMPZ 00000662
0000062d 0b b8 00 00 00 ; CALL 000000b8 - ?COMPILING
00000632 09 59 06 00 00 ; JMPZ 00000659
00000637 06             ; DUP
00000638 01 00 01 00 00 ; PUSH 00000100
0000063d 15             ; LT
0000063e 09 49 06 00 00 ; JMPZ 00000649
00000643 0e 08          ; CPUSH 08
00000645 4a             ; (data)
00000646 06             ; DUP
00000647 00             ; RESET
00000648 00             ; RESET
00000649 01 0b f6 00 00 ; PUSH 0000f60b
0000064e 00             ; RESET
0000064f 0b e0 00 00 00 ; CALL 000000e0 - ,
00000654 08 5d 06 00 00 ; JMP 0000065d
00000659 0e 41          ; CPUSH 41
0000065b 11             ; ADD
0000065c 19             ; EMIT
0000065d 08 72 06 00 00 ; JMP 00000672
00000662 05             ; DROP
00000663 0e 20          ; CPUSH 20
00000665 19             ; EMIT
00000666 22             ; RFETCH
00000667 0b de 03 00 00 ; CALL 000003de - ZTYPE
0000066c 0e 3f          ; CPUSH 3f
0000066e 19             ; EMIT
0000066f 0e 3f          ; CPUSH 3f
00000671 19             ; EMIT
00000672 23             ; RTOD
00000673 05             ; DROP
00000674 0c             ; RET
00000675 18 e6 13 00 00 ; DICTP 000013e6 - executeInput
0000067a 0b 90 00 00 00 ; CALL 00000090 - >IN
0000067f 02             ; FETCH
00000680 0b 8a 04 00 00 ; CALL 0000048a - skipWS
00000685 0b 90 00 00 00 ; CALL 00000090 - >IN
0000068a 03             ; STORE
0000068b 0b 90 00 00 00 ; CALL 00000090 - >IN
00000690 02             ; FETCH
00000691 0f             ; CFETCH
00000692 09 b2 06 00 00 ; JMPZ 000006b2
00000697 0b 90 00 00 00 ; CALL 00000090 - >IN
0000069c 02             ; FETCH
0000069d 0b b3 04 00 00 ; CALL 000004b3 - getOneWord
000006a2 0b 90 00 00 00 ; CALL 00000090 - >IN
000006a7 03             ; STORE
000006a8 0b c6 05 00 00 ; CALL 000005c6 - executeWord
000006ad 08 b4 06 00 00 ; JMP 000006b4
000006b2 05             ; DROP
000006b3 0c             ; RET
000006b4 08 7a 06 00 00 ; JMP 0000067a
000006b9 0c             ; RET
000006ba 18 d2 13 00 00 ; DICTP 000013d2 - parseLine
000006bf 0b 3b 04 00 00 ; CALL 0000043b - getInput
000006c4 24             ; ONEPLUS
000006c5 0b 90 00 00 00 ; CALL 00000090 - >IN
000006ca 03             ; STORE
000006cb 0b 75 06 00 00 ; CALL 00000675 - executeInput
000006d0 0c             ; RET
000006d1 18 c0 13 00 00 ; DICTP 000013c0 - initSys
000006d6 0c             ; RET
000006d7 18 ab 13 00 00 ; DICTP 000013ab - resetState
000006dc 0e 00          ; CPUSH 00
000006de 0b 60 00 00 00 ; CALL 00000060 - STATE
000006e3 03             ; STORE
000006e4 0b 7c 04 00 00 ; CALL 0000047c - DECIMAL
000006e9 0c             ; RET
000006ea 18 98 13 00 00 ; DICTP 00001398 - mainLoop
000006ef 0b d7 06 00 00 ; CALL 000006d7 - resetState
000006f4 0b fb 03 00 00 ; CALL 000003fb - OK
000006f9 0b ba 06 00 00 ; CALL 000006ba - parseLine
000006fe 08 f4 06 00 00 ; JMP 000006f4
00000703 0c             ; RET
00000704 18 89 13 00 00 ; DICTP 00001389 - main
00000709 0b 11 04 00 00 ; CALL 00000411 - HELLO
0000070e 0b d1 06 00 00 ; CALL 000006d1 - initSys
00000713 0b ea 06 00 00 ; CALL 000006ea - mainLoop
00000718 0c             ; RET

00001389 ; The dictionary starts here ...

00001389 98 13 00 00            ; Next=00001398, main
0000138d 04 07 00 00 00         ; XT=00000704, flags=00
00001392 04 6d 61 69 6e 00

00001398 ab 13 00 00            ; Next=000013ab, mainLoop
0000139c ea 06 00 00 00         ; XT=000006ea, flags=00
000013a1 08 6d 61 69 6e 4c 6f 6f 70 00

000013ab c0 13 00 00            ; Next=000013c0, resetState
000013af d7 06 00 00 00         ; XT=000006d7, flags=00
000013b4 0a 72 65 73 65 74 53 74 61 74 65 00

000013c0 d2 13 00 00            ; Next=000013d2, initSys
000013c4 d1 06 00 00 00         ; XT=000006d1, flags=00
000013c9 07 69 6e 69 74 53 79 73 00

000013d2 e6 13 00 00            ; Next=000013e6, parseLine
000013d6 ba 06 00 00 00         ; XT=000006ba, flags=00
000013db 09 70 61 72 73 65 4c 69 6e 65 00

000013e6 fd 13 00 00            ; Next=000013fd, executeInput
000013ea 75 06 00 00 00         ; XT=00000675, flags=00
000013ef 0c 65 78 65 63 75 74 65 49 6e 70 75 74 00

000013fd 13 14 00 00            ; Next=00001413, executeWord
00001401 c6 05 00 00 00         ; XT=000005c6, flags=00
00001406 0b 65 78 65 63 75 74 65 57 6f 72 64 00

00001413 27 14 00 00            ; Next=00001427, isNumber?
00001417 65 05 00 00 00         ; XT=00000565, flags=00
0000141c 09 69 73 4e 75 6d 62 65 72 3f 00

00001427 3c 14 00 00            ; Next=0000143c, isNumChar?
0000142b 2a 05 00 00 00         ; XT=0000052a, flags=00
00001430 0a 69 73 4e 75 6d 43 68 61 72 3f 00

0000143c 52 14 00 00            ; Next=00001452, isHexDigit?
00001440 f1 04 00 00 00         ; XT=000004f1, flags=00
00001445 0b 69 73 48 65 78 44 69 67 69 74 3f 00

00001452 67 14 00 00            ; Next=00001467, findInDict
00001456 e5 04 00 00 00         ; XT=000004e5, flags=00
0000145b 0a 66 69 6e 64 49 6e 44 69 63 74 00

00001467 7c 14 00 00            ; Next=0000147c, getOneWord
0000146b b3 04 00 00 00         ; XT=000004b3, flags=00
00001470 0a 67 65 74 4f 6e 65 57 6f 72 64 00

0000147c 8d 14 00 00            ; Next=0000148d, skipWS
00001480 8a 04 00 00 00         ; XT=0000048a, flags=00
00001485 06 73 6b 69 70 57 53 00

0000148d 9f 14 00 00            ; Next=0000149f, DECIMAL
00001491 7c 04 00 00 00         ; XT=0000047c, flags=00
00001496 07 44 45 43 49 4d 41 4c 00

0000149f ad 14 00 00            ; Next=000014ad, HEX
000014a3 6e 04 00 00 00         ; XT=0000046e, flags=00
000014a8 03 48 45 58 00

000014ad bc 14 00 00            ; Next=000014bc, ?DUP
000014b1 61 04 00 00 00         ; XT=00000461, flags=00
000014b6 04 3f 44 55 50 00

000014bc ca 14 00 00            ; Next=000014ca, bye
000014c0 51 04 00 00 00         ; XT=00000451, flags=00
000014c5 03 62 79 65 00

000014ca dd 14 00 00            ; Next=000014dd, getInput
000014ce 3b 04 00 00 00         ; XT=0000043b, flags=00
000014d3 08 67 65 74 49 6e 70 75 74 00

000014dd eb 14 00 00            ; Next=000014eb, PAD
000014e1 2d 04 00 00 00         ; XT=0000042d, flags=00
000014e6 03 50 41 44 00

000014eb fb 14 00 00            ; Next=000014fb, HELLO
000014ef 11 04 00 00 00         ; XT=00000411, flags=00
000014f4 05 48 45 4c 4c 4f 00

000014fb 08 15 00 00            ; Next=00001508, OK
000014ff fb 03 00 00 00         ; XT=000003fb, flags=00
00001504 02 4f 4b 00

00001508 18 15 00 00            ; Next=00001518, ZTYPE
0000150c de 03 00 00 00         ; XT=000003de, flags=00
00001511 05 5a 54 59 50 45 00

00001518 25 15 00 00            ; Next=00001525, BL
0000151c d5 03 00 00 00         ; XT=000003d5, flags=00
00001521 02 42 4c 00

00001525 34 15 00 00            ; Next=00001534, CRLF
00001529 c9 03 00 00 00         ; XT=000003c9, flags=00
0000152e 04 43 52 4c 46 00

00001534 41 15 00 00            ; Next=00001541, >=
00001538 bd 03 00 00 00         ; XT=000003bd, flags=00
0000153d 02 3e 3d 00

00001541 4e 15 00 00            ; Next=0000154e, <=
00001545 b1 03 00 00 00         ; XT=000003b1, flags=00
0000154a 02 3c 3d 00

0000154e 5b 15 00 00            ; Next=0000155b, <>
00001552 a5 03 00 00 00         ; XT=000003a5, flags=00
00001557 02 3c 3e 00

0000155b 68 15 00 00            ; Next=00001568, 0=
0000155f 9c 03 00 00 00         ; XT=0000039c, flags=00
00001564 02 30 3d 00

00001568 75 15 00 00            ; Next=00001575, 1+
0000156c 83 03 00 00 01         ; XT=00000383, flags=01
00001571 02 31 2b 00

00001575 86 15 00 00            ; Next=00001586, FCLOSE
00001579 6a 03 00 00 01         ; XT=0000036a, flags=01
0000157e 06 46 43 4c 4f 53 45 00

00001586 97 15 00 00            ; Next=00001597, FRWITE
0000158a 49 03 00 00 01         ; XT=00000349, flags=01
0000158f 06 46 52 57 49 54 45 00

00001597 ab 15 00 00            ; Next=000015ab, FREADLINE
0000159b 30 03 00 00 01         ; XT=00000330, flags=01
000015a0 09 46 52 45 41 44 4c 49 4e 45 00

000015ab bb 15 00 00            ; Next=000015bb, FREAD
000015af 17 03 00 00 01         ; XT=00000317, flags=01
000015b4 05 46 52 45 41 44 00

000015bb cb 15 00 00            ; Next=000015cb, FOPEN
000015bf fe 02 00 00 01         ; XT=000002fe, flags=01
000015c4 05 46 4f 50 45 4e 00

000015cb da 15 00 00            ; Next=000015da, EMIT
000015cf e5 02 00 00 01         ; XT=000002e5, flags=01
000015d4 04 45 4d 49 54 00

000015da e8 15 00 00            ; Next=000015e8, BYE
000015de cc 02 00 00 01         ; XT=000002cc, flags=01
000015e3 03 42 59 45 00

000015e8 f8 15 00 00            ; Next=000015f8, RESET
000015ec b3 02 00 00 01         ; XT=000002b3, flags=01
000015f1 05 52 45 53 45 54 00

000015f8 07 16 00 00            ; Next=00001607, TUCK
000015fc 9a 02 00 00 01         ; XT=0000029a, flags=01
00001601 04 54 55 43 4b 00

00001607 16 16 00 00            ; Next=00001616, OVER
0000160b 81 02 00 00 01         ; XT=00000281, flags=01
00001610 04 4f 56 45 52 00

00001616 24 16 00 00            ; Next=00001624, ROT
0000161a 68 02 00 00 01         ; XT=00000268, flags=01
0000161f 03 52 4f 54 00

00001624 33 16 00 00            ; Next=00001633, DROP
00001628 4f 02 00 00 01         ; XT=0000024f, flags=01
0000162d 04 44 52 4f 50 00

00001633 42 16 00 00            ; Next=00001642, SWAP
00001637 36 02 00 00 01         ; XT=00000236, flags=01
0000163c 04 53 57 41 50 00

00001642 50 16 00 00            ; Next=00001650, DUP
00001646 1d 02 00 00 01         ; XT=0000021d, flags=01
0000164b 03 44 55 50 00

00001650 5c 16 00 00            ; Next=0000165c, >
00001654 04 02 00 00 01         ; XT=00000204, flags=01
00001659 01 3e 00

0000165c 68 16 00 00            ; Next=00001668, =
00001660 eb 01 00 00 01         ; XT=000001eb, flags=01
00001665 01 3d 00

00001668 74 16 00 00            ; Next=00001674, <
0000166c d2 01 00 00 01         ; XT=000001d2, flags=01
00001671 01 3c 00

00001674 80 16 00 00            ; Next=00001680, /
00001678 b9 01 00 00 01         ; XT=000001b9, flags=01
0000167d 01 2f 00

00001680 8c 16 00 00            ; Next=0000168c, *
00001684 a0 01 00 00 01         ; XT=000001a0, flags=01
00001689 01 2a 00

0000168c 98 16 00 00            ; Next=00001698, -
00001690 87 01 00 00 01         ; XT=00000187, flags=01
00001695 01 2d 00

00001698 a4 16 00 00            ; Next=000016a4, +
0000169c 6e 01 00 00 01         ; XT=0000016e, flags=01
000016a1 01 2b 00

000016a4 b1 16 00 00            ; Next=000016b1, C@
000016a8 55 01 00 00 01         ; XT=00000155, flags=01
000016ad 02 43 40 00

000016b1 bd 16 00 00            ; Next=000016bd, @
000016b5 3c 01 00 00 01         ; XT=0000013c, flags=01
000016ba 01 40 00

000016bd ca 16 00 00            ; Next=000016ca, C!
000016c1 23 01 00 00 01         ; XT=00000123, flags=01
000016c6 02 43 21 00

000016ca d6 16 00 00            ; Next=000016d6, !
000016ce 0a 01 00 00 01         ; XT=0000010a, flags=01
000016d3 01 21 00

000016d6 e3 16 00 00            ; Next=000016e3, C,
000016da f6 00 00 00 00         ; XT=000000f6, flags=00
000016df 02 43 2c 00

000016e3 ef 16 00 00            ; Next=000016ef, ,
000016e7 e0 00 00 00 00         ; XT=000000e0, flags=00
000016ec 01 2c 00

000016ef fb 16 00 00            ; Next=000016fb, ]
000016f3 d2 00 00 00 00         ; XT=000000d2, flags=00
000016f8 01 5d 00

000016fb 07 17 00 00            ; Next=00001707, [
000016ff c4 00 00 00 00         ; XT=000000c4, flags=00
00001704 01 5b 00

00001707 1c 17 00 00            ; Next=0000171c, ?COMPILING
0000170b b8 00 00 00 00         ; XT=000000b8, flags=00
00001710 0a 3f 43 4f 4d 50 49 4c 49 4e 47 00

0000171c 2b 17 00 00            ; Next=0000172b, LAST
00001720 ac 00 00 00 00         ; XT=000000ac, flags=00
00001725 04 4c 41 53 54 00

0000172b 3a 17 00 00            ; Next=0000173a, HERE
0000172f a0 00 00 00 00         ; XT=000000a0, flags=00
00001734 04 48 45 52 45 00

0000173a 4a 17 00 00            ; Next=0000174a, isNeg
0000173e 98 00 00 00 00         ; XT=00000098, flags=00
00001743 05 69 73 4e 65 67 00

0000174a 58 17 00 00            ; Next=00001758, >IN
0000174e 90 00 00 00 00         ; XT=00000090, flags=00
00001753 03 3e 49 4e 00

00001758 6b 17 00 00            ; Next=0000176b, INPUT-FP
0000175c 88 00 00 00 00         ; XT=00000088, flags=00
00001761 08 49 4e 50 55 54 2d 46 50 00

0000176b 7b 17 00 00            ; Next=0000177b, STDIN
0000176f 80 00 00 00 00         ; XT=00000080, flags=00
00001774 05 53 54 44 49 4e 00

0000177b 8e 17 00 00            ; Next=0000178e, (RSTACK)
0000177f 78 00 00 00 00         ; XT=00000078, flags=00
00001784 08 28 52 53 54 41 43 4b 29 00

0000178e a0 17 00 00            ; Next=000017a0, (STACK)
00001792 70 00 00 00 00         ; XT=00000070, flags=00
00001797 07 28 53 54 41 43 4b 29 00

000017a0 af 17 00 00            ; Next=000017af, BASE
000017a4 68 00 00 00 00         ; XT=00000068, flags=00
000017a9 04 42 41 53 45 00

000017af bf 17 00 00            ; Next=000017bf, STATE
000017b3 60 00 00 00 00         ; XT=00000060, flags=00
000017b8 05 53 54 41 54 45 00

000017bf d0 17 00 00            ; Next=000017d0, (LAST)
000017c3 58 00 00 00 00         ; XT=00000058, flags=00
000017c8 06 28 4c 41 53 54 29 00

000017d0 e1 17 00 00            ; Next=000017e1, (HERE)
000017d4 50 00 00 00 00         ; XT=00000050, flags=00
000017d9 06 28 48 45 52 45 29 00

000017e1 ef 17 00 00            ; Next=000017ef, RSP
000017e5 48 00 00 00 00         ; XT=00000048, flags=00
000017ea 03 52 53 50 00

000017ef fc 17 00 00            ; Next=000017fc, SP
000017f3 40 00 00 00 00         ; XT=00000040, flags=00
000017f8 02 53 50 00

000017fc 00 00 00 00            ; End
