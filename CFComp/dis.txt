00000000 08 3a 06 00 00 ; JMP 0000063a
00000005 00             ; RESET
00000006 00             ; RESET
00000007 00             ; RESET
00000008 00             ; RESET
00000009 18 00 00 00 1c ; DICTP 1c000000 - ??
0000000e 00             ; RESET
0000000f 00             ; RESET
00000010 4f             ; (data)
00000011 06             ; DUP
00000012 00             ; RESET
00000013 00             ; RESET
00000014 b6             ; (data)
00000015 13             ; MUL
00000016 00             ; RESET
00000017 00             ; RESET
00000018 00             ; RESET
00000019 00             ; RESET
0000001a 00             ; RESET
0000001b 00             ; RESET
0000001c 0a 00 00 00 00 ; JMPNZ 00000000
00000021 00             ; RESET
00000022 00             ; RESET
00000023 00             ; RESET
00000024 00             ; RESET
00000025 00             ; RESET
00000026 00             ; RESET
00000027 00             ; RESET
00000028 00             ; RESET
00000029 00             ; RESET
0000002a 00             ; RESET
0000002b 00             ; RESET
0000002c 00             ; RESET
0000002d 00             ; RESET
0000002e 00             ; RESET
0000002f 00             ; RESET
00000030 00             ; RESET
00000031 00             ; RESET
00000032 18 ef 17 00 00 ; DICTP 000017ef - SP
00000037 0e 08          ; CPUSH 08
00000039 0c             ; RET
0000003a 18 e1 17 00 00 ; DICTP 000017e1 - RSP
0000003f 0e 0c          ; CPUSH 0c
00000041 0c             ; RET
00000042 18 d0 17 00 00 ; DICTP 000017d0 - (HERE)
00000047 0e 10          ; CPUSH 10
00000049 0c             ; RET
0000004a 18 bf 17 00 00 ; DICTP 000017bf - (LAST)
0000004f 0e 14          ; CPUSH 14
00000051 0c             ; RET
00000052 18 af 17 00 00 ; DICTP 000017af - STATE
00000057 0e 18          ; CPUSH 18
00000059 0c             ; RET
0000005a 18 a0 17 00 00 ; DICTP 000017a0 - BASE
0000005f 0e 1c          ; CPUSH 1c
00000061 0c             ; RET
00000062 18 8e 17 00 00 ; DICTP 0000178e - (STACK)
00000067 0e 20          ; CPUSH 20
00000069 0c             ; RET
0000006a 18 7b 17 00 00 ; DICTP 0000177b - (RSTACK)
0000006f 0e 24          ; CPUSH 24
00000071 0c             ; RET
00000072 18 6b 17 00 00 ; DICTP 0000176b - STDIN
00000077 0e 28          ; CPUSH 28
00000079 0c             ; RET
0000007a 18 58 17 00 00 ; DICTP 00001758 - INPUT-FP
0000007f 0e 2c          ; CPUSH 2c
00000081 0c             ; RET
00000082 18 4a 17 00 00 ; DICTP 0000174a - >IN
00000087 0e 30          ; CPUSH 30
00000089 0c             ; RET
0000008a 18 3b 17 00 00 ; DICTP 0000173b - HERE
0000008f 0b 42 00 00 00 ; CALL 00000042 - (HERE)
00000094 02             ; FETCH
00000095 0c             ; RET
00000096 18 2c 17 00 00 ; DICTP 0000172c - LAST
0000009b 0b 4a 00 00 00 ; CALL 0000004a - (LAST)
000000a0 02             ; FETCH
000000a1 0c             ; RET
000000a2 18 20 17 00 00 ; DICTP 00001720 - ,
000000a7 0b 8a 00 00 00 ; CALL 0000008a - HERE
000000ac 03             ; STORE
000000ad 0b 8a 00 00 00 ; CALL 0000008a - HERE
000000b2 0e 04          ; CPUSH 04
000000b4 11             ; ADD
000000b5 0b 42 00 00 00 ; CALL 00000042 - (HERE)
000000ba 03             ; STORE
000000bb 0c             ; RET
000000bc 18 13 17 00 00 ; DICTP 00001713 - C,
000000c1 0b 8a 00 00 00 ; CALL 0000008a - HERE
000000c6 10             ; CSTORE
000000c7 0b 8a 00 00 00 ; CALL 0000008a - HERE
000000cc 0e 01          ; CPUSH 01
000000ce 11             ; ADD
000000cf 0b 42 00 00 00 ; CALL 00000042 - (HERE)
000000d4 03             ; STORE
000000d5 0c             ; RET
000000d6 18 05 17 00 00 ; DICTP 00001705 - HEX
000000db 0e 10          ; CPUSH 10
000000dd 0b 5a 00 00 00 ; CALL 0000005a - BASE
000000e2 03             ; STORE
000000e3 0c             ; RET
000000e4 18 f3 16 00 00 ; DICTP 000016f3 - DECIMAL
000000e9 0e 0a          ; CPUSH 0a
000000eb 0b 5a 00 00 00 ; CALL 0000005a - BASE
000000f0 03             ; STORE
000000f1 0c             ; RET
000000f2 18 de 16 00 00 ; DICTP 000016de - ?COMPILING
000000f7 0b 52 00 00 00 ; CALL 00000052 - STATE
000000fc 02             ; FETCH
000000fd 0c             ; RET
000000fe 18 d2 16 00 00 ; DICTP 000016d2 - [
00000103 0e 00          ; CPUSH 00
00000105 0b 52 00 00 00 ; CALL 00000052 - STATE
0000010a 03             ; STORE
0000010b 0c             ; RET
0000010c 18 c6 16 00 00 ; DICTP 000016c6 - ]
00000111 0e 01          ; CPUSH 01
00000113 0b 52 00 00 00 ; CALL 00000052 - STATE
00000118 03             ; STORE
00000119 0c             ; RET
0000011a 18 ba 16 00 00 ; DICTP 000016ba - !
0000011f 0b f2 00 00 00 ; CALL 000000f2 - ?COMPILING
00000124 09 31 01 00 00 ; JMPZ 00000131
00000129 0e 03          ; CPUSH 03
0000012b 0b bc 00 00 00 ; CALL 000000bc - C,
00000130 0c             ; RET
00000131 03             ; STORE
00000132 0c             ; RET
00000133 18 ad 16 00 00 ; DICTP 000016ad - C!
00000138 0b f2 00 00 00 ; CALL 000000f2 - ?COMPILING
0000013d 09 4a 01 00 00 ; JMPZ 0000014a
00000142 0e 10          ; CPUSH 10
00000144 0b bc 00 00 00 ; CALL 000000bc - C,
00000149 0c             ; RET
0000014a 10             ; CSTORE
0000014b 0c             ; RET
0000014c 18 a1 16 00 00 ; DICTP 000016a1 - @
00000151 0b f2 00 00 00 ; CALL 000000f2 - ?COMPILING
00000156 09 63 01 00 00 ; JMPZ 00000163
0000015b 0e 02          ; CPUSH 02
0000015d 0b bc 00 00 00 ; CALL 000000bc - C,
00000162 0c             ; RET
00000163 02             ; FETCH
00000164 0c             ; RET
00000165 18 94 16 00 00 ; DICTP 00001694 - C@
0000016a 0b f2 00 00 00 ; CALL 000000f2 - ?COMPILING
0000016f 09 7c 01 00 00 ; JMPZ 0000017c
00000174 0e 0f          ; CPUSH 0f
00000176 0b bc 00 00 00 ; CALL 000000bc - C,
0000017b 0c             ; RET
0000017c 0f             ; CFETCH
0000017d 0c             ; RET
0000017e 18 88 16 00 00 ; DICTP 00001688 - +
00000183 0b f2 00 00 00 ; CALL 000000f2 - ?COMPILING
00000188 09 95 01 00 00 ; JMPZ 00000195
0000018d 0e 11          ; CPUSH 11
0000018f 0b bc 00 00 00 ; CALL 000000bc - C,
00000194 0c             ; RET
00000195 11             ; ADD
00000196 0c             ; RET
00000197 18 7c 16 00 00 ; DICTP 0000167c - -
0000019c 0b f2 00 00 00 ; CALL 000000f2 - ?COMPILING
000001a1 09 ae 01 00 00 ; JMPZ 000001ae
000001a6 0e 12          ; CPUSH 12
000001a8 0b bc 00 00 00 ; CALL 000000bc - C,
000001ad 0c             ; RET
000001ae 12             ; SUB
000001af 0c             ; RET
000001b0 18 70 16 00 00 ; DICTP 00001670 - *
000001b5 0b f2 00 00 00 ; CALL 000000f2 - ?COMPILING
000001ba 09 c7 01 00 00 ; JMPZ 000001c7
000001bf 0e 13          ; CPUSH 13
000001c1 0b bc 00 00 00 ; CALL 000000bc - C,
000001c6 0c             ; RET
000001c7 13             ; MUL
000001c8 0c             ; RET
000001c9 18 64 16 00 00 ; DICTP 00001664 - /
000001ce 0b f2 00 00 00 ; CALL 000000f2 - ?COMPILING
000001d3 09 e0 01 00 00 ; JMPZ 000001e0
000001d8 0e 14          ; CPUSH 14
000001da 0b bc 00 00 00 ; CALL 000000bc - C,
000001df 0c             ; RET
000001e0 14             ; DIV
000001e1 0c             ; RET
000001e2 18 58 16 00 00 ; DICTP 00001658 - <
000001e7 0b f2 00 00 00 ; CALL 000000f2 - ?COMPILING
000001ec 09 f9 01 00 00 ; JMPZ 000001f9
000001f1 0e 15          ; CPUSH 15
000001f3 0b bc 00 00 00 ; CALL 000000bc - C,
000001f8 0c             ; RET
000001f9 15             ; LT
000001fa 0c             ; RET
000001fb 18 4c 16 00 00 ; DICTP 0000164c - =
00000200 0b f2 00 00 00 ; CALL 000000f2 - ?COMPILING
00000205 09 12 02 00 00 ; JMPZ 00000212
0000020a 0e 16          ; CPUSH 16
0000020c 0b bc 00 00 00 ; CALL 000000bc - C,
00000211 0c             ; RET
00000212 16             ; EQ
00000213 0c             ; RET
00000214 18 40 16 00 00 ; DICTP 00001640 - >
00000219 0b f2 00 00 00 ; CALL 000000f2 - ?COMPILING
0000021e 09 2b 02 00 00 ; JMPZ 0000022b
00000223 0e 17          ; CPUSH 17
00000225 0b bc 00 00 00 ; CALL 000000bc - C,
0000022a 0c             ; RET
0000022b 17             ; GT
0000022c 0c             ; RET
0000022d 18 32 16 00 00 ; DICTP 00001632 - DUP
00000232 0b f2 00 00 00 ; CALL 000000f2 - ?COMPILING
00000237 09 44 02 00 00 ; JMPZ 00000244
0000023c 0e 06          ; CPUSH 06
0000023e 0b bc 00 00 00 ; CALL 000000bc - C,
00000243 0c             ; RET
00000244 06             ; DUP
00000245 0c             ; RET
00000246 18 23 16 00 00 ; DICTP 00001623 - SWAP
0000024b 0b f2 00 00 00 ; CALL 000000f2 - ?COMPILING
00000250 09 5d 02 00 00 ; JMPZ 0000025d
00000255 0e 04          ; CPUSH 04
00000257 0b bc 00 00 00 ; CALL 000000bc - C,
0000025c 0c             ; RET
0000025d 04             ; SWAP
0000025e 0c             ; RET
0000025f 18 14 16 00 00 ; DICTP 00001614 - DROP
00000264 0b f2 00 00 00 ; CALL 000000f2 - ?COMPILING
00000269 09 76 02 00 00 ; JMPZ 00000276
0000026e 0e 05          ; CPUSH 05
00000270 0b bc 00 00 00 ; CALL 000000bc - C,
00000275 0c             ; RET
00000276 05             ; DROP
00000277 0c             ; RET
00000278 18 06 16 00 00 ; DICTP 00001606 - ROT
0000027d 0b f2 00 00 00 ; CALL 000000f2 - ?COMPILING
00000282 09 8f 02 00 00 ; JMPZ 0000028f
00000287 0e 07          ; CPUSH 07
00000289 0b bc 00 00 00 ; CALL 000000bc - C,
0000028e 0c             ; RET
0000028f 07             ; ROT
00000290 0c             ; RET
00000291 18 f7 15 00 00 ; DICTP 000015f7 - OVER
00000296 0b f2 00 00 00 ; CALL 000000f2 - ?COMPILING
0000029b 09 a8 02 00 00 ; JMPZ 000002a8
000002a0 0e 1a          ; CPUSH 1a
000002a2 0b bc 00 00 00 ; CALL 000000bc - C,
000002a7 0c             ; RET
000002a8 1a             ; OVER
000002a9 0c             ; RET
000002aa 18 e8 15 00 00 ; DICTP 000015e8 - TUCK
000002af 0b f2 00 00 00 ; CALL 000000f2 - ?COMPILING
000002b4 09 c1 02 00 00 ; JMPZ 000002c1
000002b9 0e 1b          ; CPUSH 1b
000002bb 0b bc 00 00 00 ; CALL 000000bc - C,
000002c0 0c             ; RET
000002c1 1b             ; TUCK
000002c2 0c             ; RET
000002c3 18 d8 15 00 00 ; DICTP 000015d8 - RESET
000002c8 0b f2 00 00 00 ; CALL 000000f2 - ?COMPILING
000002cd 09 da 02 00 00 ; JMPZ 000002da
000002d2 0e 00          ; CPUSH 00
000002d4 0b bc 00 00 00 ; CALL 000000bc - C,
000002d9 0c             ; RET
000002da 00             ; RESET
000002db 0c             ; RET
000002dc 18 ca 15 00 00 ; DICTP 000015ca - BYE
000002e1 0b f2 00 00 00 ; CALL 000000f2 - ?COMPILING
000002e6 09 f3 02 00 00 ; JMPZ 000002f3
000002eb 0e ff          ; CPUSH ff
000002ed 0b bc 00 00 00 ; CALL 000000bc - C,
000002f2 0c             ; RET
000002f3 ff             ; BYE
000002f4 0c             ; RET
000002f5 18 bb 15 00 00 ; DICTP 000015bb - EMIT
000002fa 0b f2 00 00 00 ; CALL 000000f2 - ?COMPILING
000002ff 09 0c 03 00 00 ; JMPZ 0000030c
00000304 0e 19          ; CPUSH 19
00000306 0b bc 00 00 00 ; CALL 000000bc - C,
0000030b 0c             ; RET
0000030c 19             ; EMIT
0000030d 0c             ; RET
0000030e 18 ab 15 00 00 ; DICTP 000015ab - FOPEN
00000313 0b f2 00 00 00 ; CALL 000000f2 - ?COMPILING
00000318 09 25 03 00 00 ; JMPZ 00000325
0000031d 0e 1c          ; CPUSH 1c
0000031f 0b bc 00 00 00 ; CALL 000000bc - C,
00000324 0c             ; RET
00000325 1c             ; FOPEN
00000326 0c             ; RET
00000327 18 9b 15 00 00 ; DICTP 0000159b - FREAD
0000032c 0b f2 00 00 00 ; CALL 000000f2 - ?COMPILING
00000331 09 3e 03 00 00 ; JMPZ 0000033e
00000336 0e 1d          ; CPUSH 1d
00000338 0b bc 00 00 00 ; CALL 000000bc - C,
0000033d 0c             ; RET
0000033e 1d             ; FREAD
0000033f 0c             ; RET
00000340 18 87 15 00 00 ; DICTP 00001587 - FREADLINE
00000345 0b f2 00 00 00 ; CALL 000000f2 - ?COMPILING
0000034a 09 57 03 00 00 ; JMPZ 00000357
0000034f 0e 1e          ; CPUSH 1e
00000351 0b bc 00 00 00 ; CALL 000000bc - C,
00000356 0c             ; RET
00000357 1e             ; FREADLINE
00000358 0c             ; RET
00000359 18 76 15 00 00 ; DICTP 00001576 - FRWITE
0000035e 0b f2 00 00 00 ; CALL 000000f2 - ?COMPILING
00000363 09 74 03 00 00 ; JMPZ 00000374
00000368 0e 0b          ; CPUSH 0b
0000036a 59             ; (data)
0000036b 03             ; STORE
0000036c 00             ; RESET
0000036d 00             ; RESET
0000036e 0b bc 00 00 00 ; CALL 000000bc - C,
00000373 0c             ; RET
00000374 0b 59 03 00 00 ; CALL 00000359 - FRWITE
00000379 0c             ; RET
0000037a 18 65 15 00 00 ; DICTP 00001565 - FCLOSE
0000037f 0b f2 00 00 00 ; CALL 000000f2 - ?COMPILING
00000384 09 91 03 00 00 ; JMPZ 00000391
00000389 0e 20          ; CPUSH 20
0000038b 0b bc 00 00 00 ; CALL 000000bc - C,
00000390 0c             ; RET
00000391 20             ; FCLOSE
00000392 0c             ; RET
00000393 18 58 15 00 00 ; DICTP 00001558 - 1+
00000398 0e 01          ; CPUSH 01
0000039a 11             ; ADD
0000039b 0c             ; RET
0000039c 18 4b 15 00 00 ; DICTP 0000154b - 0=
000003a1 0e 00          ; CPUSH 00
000003a3 16             ; EQ
000003a4 0c             ; RET
000003a5 18 3e 15 00 00 ; DICTP 0000153e - <>
000003aa 16             ; EQ
000003ab 0b 9c 03 00 00 ; CALL 0000039c - 0=
000003b0 0c             ; RET
000003b1 18 31 15 00 00 ; DICTP 00001531 - <=
000003b6 17             ; GT
000003b7 0b 9c 03 00 00 ; CALL 0000039c - 0=
000003bc 0c             ; RET
000003bd 18 24 15 00 00 ; DICTP 00001524 - >=
000003c2 15             ; LT
000003c3 0b 9c 03 00 00 ; CALL 0000039c - 0=
000003c8 0c             ; RET
000003c9 18 15 15 00 00 ; DICTP 00001515 - CRLF
000003ce 0e 0d          ; CPUSH 0d
000003d0 19             ; EMIT
000003d1 0e 0a          ; CPUSH 0a
000003d3 19             ; EMIT
000003d4 0c             ; RET
000003d5 18 08 15 00 00 ; DICTP 00001508 - BL
000003da 0e 20          ; CPUSH 20
000003dc 19             ; EMIT
000003dd 0c             ; RET
000003de 18 f8 14 00 00 ; DICTP 000014f8 - ZTYPE
000003e3 06             ; DUP
000003e4 0f             ; CFETCH
000003e5 06             ; DUP
000003e6 09 f6 03 00 00 ; JMPZ 000003f6
000003eb 19             ; EMIT
000003ec 0b 93 03 00 00 ; CALL 00000393 - 1+
000003f1 08 f9 03 00 00 ; JMP 000003f9
000003f6 05             ; DROP
000003f7 05             ; DROP
000003f8 0c             ; RET
000003f9 08 e3 03 00 00 ; JMP 000003e3
000003fe 0c             ; RET
000003ff 18 eb 14 00 00 ; DICTP 000014eb - OK
00000404 0b d5 03 00 00 ; CALL 000003d5 - BL
00000409 0e 4f          ; CPUSH 4f
0000040b 19             ; EMIT
0000040c 0e 4b          ; CPUSH 4b
0000040e 19             ; EMIT
0000040f 0b c9 03 00 00 ; CALL 000003c9 - CRLF
00000414 0c             ; RET
00000415 18 db 14 00 00 ; DICTP 000014db - HELLO
0000041a 0e 48          ; CPUSH 48
0000041c 19             ; EMIT
0000041d 0e 49          ; CPUSH 49
0000041f 19             ; EMIT
00000420 0c             ; RET
00000421 18 cd 14 00 00 ; DICTP 000014cd - 0SP
00000426 0b 62 00 00 00 ; CALL 00000062 - (STACK)
0000042b 02             ; FETCH
0000042c 0b 32 00 00 00 ; CALL 00000032 - SP
00000431 03             ; STORE
00000432 0c             ; RET
00000433 18 bf 14 00 00 ; DICTP 000014bf - PAD
00000438 0b 96 00 00 00 ; CALL 00000096 - LAST
0000043d 0e c8          ; CPUSH c8
0000043f 12             ; SUB
00000440 0c             ; RET
00000441 18 ac 14 00 00 ; DICTP 000014ac - getInput
00000446 0b 33 04 00 00 ; CALL 00000433 - PAD
0000044b 0e 80          ; CPUSH 80
0000044d 0e 00          ; CPUSH 00
0000044f 1e             ; FREADLINE
00000450 05             ; DROP
00000451 0b 33 04 00 00 ; CALL 00000433 - PAD
00000456 0c             ; RET
00000457 18 9e 14 00 00 ; DICTP 0000149e - bye
0000045c 0e 42          ; CPUSH 42
0000045e 19             ; EMIT
0000045f 0e 59          ; CPUSH 59
00000461 19             ; EMIT
00000462 0e 45          ; CPUSH 45
00000464 19             ; EMIT
00000465 ff             ; BYE
00000466 0c             ; RET
00000467 18 8f 14 00 00 ; DICTP 0000148f - ?DUP
0000046c 06             ; DUP
0000046d 09 73 04 00 00 ; JMPZ 00000473
00000472 06             ; DUP
00000473 0c             ; RET
00000474 18 7e 14 00 00 ; DICTP 0000147e - skipWS
00000479 06             ; DUP
0000047a 0f             ; CFETCH
0000047b 06             ; DUP
0000047c 09 99 04 00 00 ; JMPZ 00000499
00000481 0e 20          ; CPUSH 20
00000483 17             ; GT
00000484 09 8f 04 00 00 ; JMPZ 0000048f
00000489 0c             ; RET
0000048a 08 94 04 00 00 ; JMP 00000494
0000048f 0b 93 03 00 00 ; CALL 00000393 - 1+
00000494 08 9b 04 00 00 ; JMP 0000049b
00000499 05             ; DROP
0000049a 0c             ; RET
0000049b 08 79 04 00 00 ; JMP 00000479
000004a0 0c             ; RET
000004a1 18 69 14 00 00 ; DICTP 00001469 - getOneWord
000004a6 06             ; DUP
000004a7 21             ; DTOR
000004a8 21             ; DTOR
000004a9 22             ; RFETCH
000004aa 0f             ; CFETCH
000004ab 0e 20          ; CPUSH 20
000004ad 17             ; GT
000004ae 09 bf 04 00 00 ; JMPZ 000004bf
000004b3 23             ; RTOD
000004b4 0b 93 03 00 00 ; CALL 00000393 - 1+
000004b9 21             ; DTOR
000004ba 08 d5 04 00 00 ; JMP 000004d5
000004bf 22             ; RFETCH
000004c0 0f             ; CFETCH
000004c1 09 d1 04 00 00 ; JMPZ 000004d1
000004c6 0e 00          ; CPUSH 00
000004c8 22             ; RFETCH
000004c9 10             ; CSTORE
000004ca 23             ; RTOD
000004cb 0b 93 03 00 00 ; CALL 00000393 - 1+
000004d0 21             ; DTOR
000004d1 23             ; RTOD
000004d2 23             ; RTOD
000004d3 04             ; SWAP
000004d4 0c             ; RET
000004d5 08 a9 04 00 00 ; JMP 000004a9
000004da 0c             ; RET
000004db 18 54 14 00 00 ; DICTP 00001454 - findInDict
000004e0 0e 00          ; CPUSH 00
000004e2 0e 00          ; CPUSH 00
000004e4 0e 00          ; CPUSH 00
000004e6 0c             ; RET
000004e7 18 40 14 00 00 ; DICTP 00001440 - isNumber?
000004ec 0e 00          ; CPUSH 00
000004ee 0e 00          ; CPUSH 00
000004f0 0c             ; RET
000004f1 18 2a 14 00 00 ; DICTP 0000142a - executeWord
000004f6 0e 46          ; CPUSH 46
000004f8 19             ; EMIT
000004f9 06             ; DUP
000004fa 0b de 03 00 00 ; CALL 000003de - ZTYPE
000004ff 0e 46          ; CPUSH 46
00000501 19             ; EMIT
00000502 06             ; DUP
00000503 0f             ; CFETCH
00000504 0e 7e          ; CPUSH 7e
00000506 16             ; EQ
00000507 09 12 05 00 00 ; JMPZ 00000512
0000050c 05             ; DROP
0000050d 0b 57 04 00 00 ; CALL 00000457 - bye
00000512 21             ; DTOR
00000513 22             ; RFETCH
00000514 0b db 04 00 00 ; CALL 000004db - findInDict
00000519 09 4b 05 00 00 ; JMPZ 0000054b
0000051e 23             ; RTOD
0000051f 05             ; DROP
00000520 0b f2 00 00 00 ; CALL 000000f2 - ?COMPILING
00000525 09 45 05 00 00 ; JMPZ 00000545
0000052a 09 34 05 00 00 ; JMPZ 00000534
0000052f 08 40 05 00 00 ; JMP 00000540
00000534 01 0b 0b bc 00 ; PUSH 00bc0b0b
00000539 00             ; RESET
0000053a 00             ; RESET
0000053b 0b a2 00 00 00 ; CALL 000000a2 - ,
00000540 08 46 05 00 00 ; JMP 00000546
00000545 05             ; DROP
00000546 08 88 05 00 00 ; JMP 00000588
0000054b 05             ; DROP
0000054c 05             ; DROP
0000054d 23             ; RTOD
0000054e 0b e7 04 00 00 ; CALL 000004e7 - isNumber?
00000553 09 84 05 00 00 ; JMPZ 00000584
00000558 0b f2 00 00 00 ; CALL 000000f2 - ?COMPILING
0000055d 09 7f 05 00 00 ; JMPZ 0000057f
00000562 06             ; DUP
00000563 01 00 01 00 00 ; PUSH 00000100
00000568 15             ; LT
00000569 09 74 05 00 00 ; JMPZ 00000574
0000056e 0e 08          ; CPUSH 08
00000570 75             ; (data)
00000571 05             ; DROP
00000572 00             ; RESET
00000573 00             ; RESET
00000574 01 0b bc 00 00 ; PUSH 0000bc0b
00000579 00             ; RESET
0000057a 0b a2 00 00 00 ; CALL 000000a2 - ,
0000057f 08 88 05 00 00 ; JMP 00000588
00000584 05             ; DROP
00000585 0e 2c          ; CPUSH 2c
00000587 19             ; EMIT
00000588 0c             ; RET
00000589 18 13 14 00 00 ; DICTP 00001413 - executeInput
0000058e 0e 41          ; CPUSH 41
00000590 19             ; EMIT
00000591 0b 82 00 00 00 ; CALL 00000082 - >IN
00000596 02             ; FETCH
00000597 0b de 03 00 00 ; CALL 000003de - ZTYPE
0000059c 0e 41          ; CPUSH 41
0000059e 19             ; EMIT
0000059f 0b c9 03 00 00 ; CALL 000003c9 - CRLF
000005a4 0b 82 00 00 00 ; CALL 00000082 - >IN
000005a9 02             ; FETCH
000005aa 0b 74 04 00 00 ; CALL 00000474 - skipWS
000005af 0b 82 00 00 00 ; CALL 00000082 - >IN
000005b4 03             ; STORE
000005b5 0b 82 00 00 00 ; CALL 00000082 - >IN
000005ba 02             ; FETCH
000005bb 0f             ; CFETCH
000005bc 09 dc 05 00 00 ; JMPZ 000005dc
000005c1 0b 82 00 00 00 ; CALL 00000082 - >IN
000005c6 02             ; FETCH
000005c7 0b a1 04 00 00 ; CALL 000004a1 - getOneWord
000005cc 0b 82 00 00 00 ; CALL 00000082 - >IN
000005d1 03             ; STORE
000005d2 0b f1 04 00 00 ; CALL 000004f1 - executeWord
000005d7 08 de 05 00 00 ; JMP 000005de
000005dc 05             ; DROP
000005dd 0c             ; RET
000005de 08 8e 05 00 00 ; JMP 0000058e
000005e3 0c             ; RET
000005e4 18 ff 13 00 00 ; DICTP 000013ff - parseLine
000005e9 0b 41 04 00 00 ; CALL 00000441 - getInput
000005ee 0b 93 03 00 00 ; CALL 00000393 - 1+
000005f3 0b 82 00 00 00 ; CALL 00000082 - >IN
000005f8 03             ; STORE
000005f9 0b 89 05 00 00 ; CALL 00000589 - executeInput
000005fe 0c             ; RET
000005ff 18 ed 13 00 00 ; DICTP 000013ed - initSys
00000604 0c             ; RET
00000605 18 d8 13 00 00 ; DICTP 000013d8 - resetState
0000060a 0e 00          ; CPUSH 00
0000060c 0b 52 00 00 00 ; CALL 00000052 - STATE
00000611 03             ; STORE
00000612 0e 0a          ; CPUSH 0a
00000614 0b 5a 00 00 00 ; CALL 0000005a - BASE
00000619 03             ; STORE
0000061a 0b 21 04 00 00 ; CALL 00000421 - 0SP
0000061f 0c             ; RET
00000620 18 c5 13 00 00 ; DICTP 000013c5 - mainLoop
00000625 0b 05 06 00 00 ; CALL 00000605 - resetState
0000062a 0b ff 03 00 00 ; CALL 000003ff - OK
0000062f 0b e4 05 00 00 ; CALL 000005e4 - parseLine
00000634 08 2a 06 00 00 ; JMP 0000062a
00000639 0c             ; RET
0000063a 18 b6 13 00 00 ; DICTP 000013b6 - main
0000063f 0b 15 04 00 00 ; CALL 00000415 - HELLO
00000644 0b ff 05 00 00 ; CALL 000005ff - initSys
00000649 0b 20 06 00 00 ; CALL 00000620 - mainLoop
0000064e 0c             ; RET

000013b6 ; The dictionary starts here ...

000013b6 c5 13 00 00            ; Next=000013c5, main
000013ba 3a 06 00 00 00         ; XT=0000063a, flags=00
000013bf 04 6d 61 69 6e 00

000013c5 d8 13 00 00            ; Next=000013d8, mainLoop
000013c9 20 06 00 00 00         ; XT=00000620, flags=00
000013ce 08 6d 61 69 6e 4c 6f 6f 70 00

000013d8 ed 13 00 00            ; Next=000013ed, resetState
000013dc 05 06 00 00 00         ; XT=00000605, flags=00
000013e1 0a 72 65 73 65 74 53 74 61 74 65 00

000013ed ff 13 00 00            ; Next=000013ff, initSys
000013f1 ff 05 00 00 00         ; XT=000005ff, flags=00
000013f6 07 69 6e 69 74 53 79 73 00

000013ff 13 14 00 00            ; Next=00001413, parseLine
00001403 e4 05 00 00 00         ; XT=000005e4, flags=00
00001408 09 70 61 72 73 65 4c 69 6e 65 00

00001413 2a 14 00 00            ; Next=0000142a, executeInput
00001417 89 05 00 00 00         ; XT=00000589, flags=00
0000141c 0c 65 78 65 63 75 74 65 49 6e 70 75 74 00

0000142a 40 14 00 00            ; Next=00001440, executeWord
0000142e f1 04 00 00 00         ; XT=000004f1, flags=00
00001433 0b 65 78 65 63 75 74 65 57 6f 72 64 00

00001440 54 14 00 00            ; Next=00001454, isNumber?
00001444 e7 04 00 00 00         ; XT=000004e7, flags=00
00001449 09 69 73 4e 75 6d 62 65 72 3f 00

00001454 69 14 00 00            ; Next=00001469, findInDict
00001458 db 04 00 00 00         ; XT=000004db, flags=00
0000145d 0a 66 69 6e 64 49 6e 44 69 63 74 00

00001469 7e 14 00 00            ; Next=0000147e, getOneWord
0000146d a1 04 00 00 00         ; XT=000004a1, flags=00
00001472 0a 67 65 74 4f 6e 65 57 6f 72 64 00

0000147e 8f 14 00 00            ; Next=0000148f, skipWS
00001482 74 04 00 00 00         ; XT=00000474, flags=00
00001487 06 73 6b 69 70 57 53 00

0000148f 9e 14 00 00            ; Next=0000149e, ?DUP
00001493 67 04 00 00 00         ; XT=00000467, flags=00
00001498 04 3f 44 55 50 00

0000149e ac 14 00 00            ; Next=000014ac, bye
000014a2 57 04 00 00 00         ; XT=00000457, flags=00
000014a7 03 62 79 65 00

000014ac bf 14 00 00            ; Next=000014bf, getInput
000014b0 41 04 00 00 00         ; XT=00000441, flags=00
000014b5 08 67 65 74 49 6e 70 75 74 00

000014bf cd 14 00 00            ; Next=000014cd, PAD
000014c3 33 04 00 00 00         ; XT=00000433, flags=00
000014c8 03 50 41 44 00

000014cd db 14 00 00            ; Next=000014db, 0SP
000014d1 21 04 00 00 00         ; XT=00000421, flags=00
000014d6 03 30 53 50 00

000014db eb 14 00 00            ; Next=000014eb, HELLO
000014df 15 04 00 00 00         ; XT=00000415, flags=00
000014e4 05 48 45 4c 4c 4f 00

000014eb f8 14 00 00            ; Next=000014f8, OK
000014ef ff 03 00 00 00         ; XT=000003ff, flags=00
000014f4 02 4f 4b 00

000014f8 08 15 00 00            ; Next=00001508, ZTYPE
000014fc de 03 00 00 00         ; XT=000003de, flags=00
00001501 05 5a 54 59 50 45 00

00001508 15 15 00 00            ; Next=00001515, BL
0000150c d5 03 00 00 00         ; XT=000003d5, flags=00
00001511 02 42 4c 00

00001515 24 15 00 00            ; Next=00001524, CRLF
00001519 c9 03 00 00 00         ; XT=000003c9, flags=00
0000151e 04 43 52 4c 46 00

00001524 31 15 00 00            ; Next=00001531, >=
00001528 bd 03 00 00 00         ; XT=000003bd, flags=00
0000152d 02 3e 3d 00

00001531 3e 15 00 00            ; Next=0000153e, <=
00001535 b1 03 00 00 00         ; XT=000003b1, flags=00
0000153a 02 3c 3d 00

0000153e 4b 15 00 00            ; Next=0000154b, <>
00001542 a5 03 00 00 00         ; XT=000003a5, flags=00
00001547 02 3c 3e 00

0000154b 58 15 00 00            ; Next=00001558, 0=
0000154f 9c 03 00 00 00         ; XT=0000039c, flags=00
00001554 02 30 3d 00

00001558 65 15 00 00            ; Next=00001565, 1+
0000155c 93 03 00 00 00         ; XT=00000393, flags=00
00001561 02 31 2b 00

00001565 76 15 00 00            ; Next=00001576, FCLOSE
00001569 7a 03 00 00 01         ; XT=0000037a, flags=01
0000156e 06 46 43 4c 4f 53 45 00

00001576 87 15 00 00            ; Next=00001587, FRWITE
0000157a 59 03 00 00 01         ; XT=00000359, flags=01
0000157f 06 46 52 57 49 54 45 00

00001587 9b 15 00 00            ; Next=0000159b, FREADLINE
0000158b 40 03 00 00 01         ; XT=00000340, flags=01
00001590 09 46 52 45 41 44 4c 49 4e 45 00

0000159b ab 15 00 00            ; Next=000015ab, FREAD
0000159f 27 03 00 00 01         ; XT=00000327, flags=01
000015a4 05 46 52 45 41 44 00

000015ab bb 15 00 00            ; Next=000015bb, FOPEN
000015af 0e 03 00 00 01         ; XT=0000030e, flags=01
000015b4 05 46 4f 50 45 4e 00

000015bb ca 15 00 00            ; Next=000015ca, EMIT
000015bf f5 02 00 00 01         ; XT=000002f5, flags=01
000015c4 04 45 4d 49 54 00

000015ca d8 15 00 00            ; Next=000015d8, BYE
000015ce dc 02 00 00 01         ; XT=000002dc, flags=01
000015d3 03 42 59 45 00

000015d8 e8 15 00 00            ; Next=000015e8, RESET
000015dc c3 02 00 00 01         ; XT=000002c3, flags=01
000015e1 05 52 45 53 45 54 00

000015e8 f7 15 00 00            ; Next=000015f7, TUCK
000015ec aa 02 00 00 01         ; XT=000002aa, flags=01
000015f1 04 54 55 43 4b 00

000015f7 06 16 00 00            ; Next=00001606, OVER
000015fb 91 02 00 00 01         ; XT=00000291, flags=01
00001600 04 4f 56 45 52 00

00001606 14 16 00 00            ; Next=00001614, ROT
0000160a 78 02 00 00 01         ; XT=00000278, flags=01
0000160f 03 52 4f 54 00

00001614 23 16 00 00            ; Next=00001623, DROP
00001618 5f 02 00 00 01         ; XT=0000025f, flags=01
0000161d 04 44 52 4f 50 00

00001623 32 16 00 00            ; Next=00001632, SWAP
00001627 46 02 00 00 01         ; XT=00000246, flags=01
0000162c 04 53 57 41 50 00

00001632 40 16 00 00            ; Next=00001640, DUP
00001636 2d 02 00 00 01         ; XT=0000022d, flags=01
0000163b 03 44 55 50 00

00001640 4c 16 00 00            ; Next=0000164c, >
00001644 14 02 00 00 01         ; XT=00000214, flags=01
00001649 01 3e 00

0000164c 58 16 00 00            ; Next=00001658, =
00001650 fb 01 00 00 01         ; XT=000001fb, flags=01
00001655 01 3d 00

00001658 64 16 00 00            ; Next=00001664, <
0000165c e2 01 00 00 01         ; XT=000001e2, flags=01
00001661 01 3c 00

00001664 70 16 00 00            ; Next=00001670, /
00001668 c9 01 00 00 01         ; XT=000001c9, flags=01
0000166d 01 2f 00

00001670 7c 16 00 00            ; Next=0000167c, *
00001674 b0 01 00 00 01         ; XT=000001b0, flags=01
00001679 01 2a 00

0000167c 88 16 00 00            ; Next=00001688, -
00001680 97 01 00 00 01         ; XT=00000197, flags=01
00001685 01 2d 00

00001688 94 16 00 00            ; Next=00001694, +
0000168c 7e 01 00 00 01         ; XT=0000017e, flags=01
00001691 01 2b 00

00001694 a1 16 00 00            ; Next=000016a1, C@
00001698 65 01 00 00 01         ; XT=00000165, flags=01
0000169d 02 43 40 00

000016a1 ad 16 00 00            ; Next=000016ad, @
000016a5 4c 01 00 00 01         ; XT=0000014c, flags=01
000016aa 01 40 00

000016ad ba 16 00 00            ; Next=000016ba, C!
000016b1 33 01 00 00 01         ; XT=00000133, flags=01
000016b6 02 43 21 00

000016ba c6 16 00 00            ; Next=000016c6, !
000016be 1a 01 00 00 01         ; XT=0000011a, flags=01
000016c3 01 21 00

000016c6 d2 16 00 00            ; Next=000016d2, ]
000016ca 0c 01 00 00 00         ; XT=0000010c, flags=00
000016cf 01 5d 00

000016d2 de 16 00 00            ; Next=000016de, [
000016d6 fe 00 00 00 00         ; XT=000000fe, flags=00
000016db 01 5b 00

000016de f3 16 00 00            ; Next=000016f3, ?COMPILING
000016e2 f2 00 00 00 00         ; XT=000000f2, flags=00
000016e7 0a 3f 43 4f 4d 50 49 4c 49 4e 47 00

000016f3 05 17 00 00            ; Next=00001705, DECIMAL
000016f7 e4 00 00 00 00         ; XT=000000e4, flags=00
000016fc 07 44 45 43 49 4d 41 4c 00

00001705 13 17 00 00            ; Next=00001713, HEX
00001709 d6 00 00 00 00         ; XT=000000d6, flags=00
0000170e 03 48 45 58 00

00001713 20 17 00 00            ; Next=00001720, C,
00001717 bc 00 00 00 00         ; XT=000000bc, flags=00
0000171c 02 43 2c 00

00001720 2c 17 00 00            ; Next=0000172c, ,
00001724 a2 00 00 00 00         ; XT=000000a2, flags=00
00001729 01 2c 00

0000172c 3b 17 00 00            ; Next=0000173b, LAST
00001730 96 00 00 00 00         ; XT=00000096, flags=00
00001735 04 4c 41 53 54 00

0000173b 4a 17 00 00            ; Next=0000174a, HERE
0000173f 8a 00 00 00 00         ; XT=0000008a, flags=00
00001744 04 48 45 52 45 00

0000174a 58 17 00 00            ; Next=00001758, >IN
0000174e 82 00 00 00 00         ; XT=00000082, flags=00
00001753 03 3e 49 4e 00

00001758 6b 17 00 00            ; Next=0000176b, INPUT-FP
0000175c 7a 00 00 00 00         ; XT=0000007a, flags=00
00001761 08 49 4e 50 55 54 2d 46 50 00

0000176b 7b 17 00 00            ; Next=0000177b, STDIN
0000176f 72 00 00 00 00         ; XT=00000072, flags=00
00001774 05 53 54 44 49 4e 00

0000177b 8e 17 00 00            ; Next=0000178e, (RSTACK)
0000177f 6a 00 00 00 00         ; XT=0000006a, flags=00
00001784 08 28 52 53 54 41 43 4b 29 00

0000178e a0 17 00 00            ; Next=000017a0, (STACK)
00001792 62 00 00 00 00         ; XT=00000062, flags=00
00001797 07 28 53 54 41 43 4b 29 00

000017a0 af 17 00 00            ; Next=000017af, BASE
000017a4 5a 00 00 00 00         ; XT=0000005a, flags=00
000017a9 04 42 41 53 45 00

000017af bf 17 00 00            ; Next=000017bf, STATE
000017b3 52 00 00 00 00         ; XT=00000052, flags=00
000017b8 05 53 54 41 54 45 00

000017bf d0 17 00 00            ; Next=000017d0, (LAST)
000017c3 4a 00 00 00 00         ; XT=0000004a, flags=00
000017c8 06 28 4c 41 53 54 29 00

000017d0 e1 17 00 00            ; Next=000017e1, (HERE)
000017d4 42 00 00 00 00         ; XT=00000042, flags=00
000017d9 06 28 48 45 52 45 29 00

000017e1 ef 17 00 00            ; Next=000017ef, RSP
000017e5 3a 00 00 00 00         ; XT=0000003a, flags=00
000017ea 03 52 53 50 00

000017ef fc 17 00 00            ; Next=000017fc, SP
000017f3 32 00 00 00 00         ; XT=00000032, flags=00
000017f8 02 53 50 00

000017fc 00 00 00 00            ; End
